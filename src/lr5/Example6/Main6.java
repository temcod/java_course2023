package lr5.Example6;
/*Напишите программу с классом, в котором есть два закрытых
целочисленных поля (назовем их max и min). Значение поля max не может
быть меньше значения поля min. Значения полям присваиваются с помощью
открытого метода. Метод может вызываться с одним или двумя
целочисленными аргументами. При вызове метода значения полям
присваиваются так: сравниваются текущие значения полей и значения
аргументов, переданных методу. Самое большое из значений присваивается
полю max, а самое маленькое из значений присваивается полю min.
Предусмотрите конструктор, который работает по тому же принципу, что и
метод для присваивания значений полям. В классе также должен быть метод,
отображающий в консольном окне значения полей объекта.*/
public class Main6 {
    //поля
    private int min;
    private int max;
    //присваивание значений с помощью открытого метода
    public void SetInt(int num1, int num2){
        //сравниваются текущие значения полей и значения аргументов, переданных методу.
        //  Самое большое из значений присваивается полю max, а самое маленькое из значений присваивается полю min.
        System.out.println("Метод Setint() c 2-я аргументами");
        min = Math.min(num1, num2);
        max = Math.max(num1, num2);
    }
    public void SetInt(int num){
        //сравниваются текущие значения полей и значения аргументов, переданных методу.
        //  Самое большое из значений присваивается полю max, а самое маленькое из значений присваивается полю min.
        System.out.println("Метод Setint() c 1-м аргументом");
        min = Math.min(min, num);
        max = Math.max(max, num);
    }
    //метод, отображающий в консольном окне значения полей объекта.
    void PrintInt() {
        System.out.println("min = "+min);
        System.out.println("max = "+max);
    }
    //конструктор, который работает по тому же принципу, что и метод для присваивания значений полям
    Main6(int num1, int num2){
        System.out.println("Конструктор  c 2-я аргументами");
        min = Math.min(num1, num2);
        max = Math.max(num1, num2);
    }
    //конструктор, который работает по тому же принципу, что и метод для присваивания значений полям
    Main6(int num){
        System.out.println("Конструктор  c 1-м аргументом");
        min = Math.min(min, num);
        max = Math.max(max, num);
    }
}
